import java.util.Scanner;
import java.util.Stack;

public class Main {
	public static void main(String[] args) {
		String input;
		Scanner scnr = new Scanner(System.in);
		System.out.println("Enter in your Expression");
		System.out.println(input = getExpression(scnr));
		System.out.println(getPostfixNotation(input));
		
		
	}
	
	static String getExpression(Scanner scnr) {
		String input = scnr.nextLine();
		while(!input.matches("[a-z +\\-\\*\\/]+") && (input.length()<=100)) {
			System.out.println("Invalid syntax");
			input = scnr.nextLine();
		}
		return input;
	}
	
	static String getPostfixNotation(String input) {
		Stack<Character> operators = new Stack<Character>();
		input = input.replace(" ", "");
		char[] chars = input.toCharArray();
		char[] postFix = new char[100];
		
		String temp="";
		
		for(Character c:chars) {
			System.out.println(c);
			if(c >= 97) {
				temp += c;
				continue;
			}
			if(operators.isEmpty() || (getOperatorPrecedence(c) > getOperatorPrecedence(operators.peek())) ) {
				operators.add(c);
				continue;
			}
			while(!operators.isEmpty() && (getOperatorPrecedence(c) >= getOperatorPrecedence(operators.peek())) ) {
				temp+=operators.pop();
			}
		}
		while(!operators.isEmpty()) {
			temp+=operators.pop();
		}
		return temp;
	}
	
	static int getOperatorPrecedence(Character c) {
		if(c == '*' || c=='/') {
			System.out.println("here");
			return 2;
		}
		return 1;
	}
}
